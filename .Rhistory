head(mycar)
head(mycars)
??mycars
car_prices {modeldata}
library(datasets)
head(mycars)
??datasets
arrow::arrow_with_s3()
for (year in 2009:2019) {
if (year == 2019) {
# We only have through June 2019 there
months <- 1:6
} else {
months <- 1:12
}
for (month in sprintf("%02d", months)) {
dir.create(file.path("nyc-taxi", year, month), recursive = TRUE)
try(download.file(
paste(bucket, year, month, "data.parquet", sep = "/"),
file.path("nyc-taxi", year, month, "data.parquet"),
mode = "wb"
), silent = TRUE)
}
}
dir.exists("nyc-taxi")
library(datasets)
cars <- mtcars
haed(cars)
head(cars)
cars.lm <- lm(mpg ~ disp, data=cars)
summary(cars.lm)
broom::glance(mtcars.lm)
broom::glance(cars.lm)
mtcars.lm <- lm(mpg ~ disp + wt, data=cars)
broom::glance(mtcars.lm)
mtcars.lm <- lm(mpg ~ disp + wt + hp + cyl, data=cars)
broom::glance(mtcars.lm)
library(caret)
library(pROC)
library(mlbench)
library(arules)
install.packages("arules", lib="/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
library(arules)
library(tidyverse)
library(modelr)
options(na.action = na.warn)
ggplot(sim1, aes(x, y)) +
geom_point()
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
models <- tibble(
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
model1 <- function(a, data) {
a[1] + data$x * a[2]
}
model1(c(7, 1.5), sim1)
model1(c(7, 1.5), sim1)
measure_distance <- function(mod, data) {
diff <- data$y - model1(mod, data)
sqrt(mean(diff ^ 2))
}
measure_distance(c(7, 1.5), sim1)
sim1_dist <- function(a1, a2) {
measure_distance(c(a1, a2), sim1)
}
models <- models %>%
mutate(dist = purrr::map2_dbl(a1, a2, sim1_dist))
models
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(models, rank(dist) <= 10)
)
ggplot(models, aes(a1, a2)) +
geom_point(data = filter(models, rank(dist) <= 10), size = 4, colour = "red") +
geom_point(aes(colour = -dist))
install.packages("reticulate", lib="/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
devtools::install_github("kjhealy/socviz")
